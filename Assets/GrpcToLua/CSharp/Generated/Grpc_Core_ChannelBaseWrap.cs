//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Grpc_Core_ChannelBaseWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Grpc.Core.ChannelBase), typeof(System.Object));
		L.RegFunction("CreateCallInvoker", CreateCallInvoker);
		L.RegFunction("ShutdownAsync", ShutdownAsync);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Target", get_Target, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateCallInvoker(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Grpc.Core.ChannelBase obj = (Grpc.Core.ChannelBase)ToLua.CheckObject<Grpc.Core.ChannelBase>(L, 1);
			Grpc.Core.CallInvoker o = obj.CreateCallInvoker();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShutdownAsync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Grpc.Core.ChannelBase obj = (Grpc.Core.ChannelBase)ToLua.CheckObject<Grpc.Core.ChannelBase>(L, 1);
			System.Threading.Tasks.Task o = obj.ShutdownAsync();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Target(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Grpc.Core.ChannelBase obj = (Grpc.Core.ChannelBase)o;
			string ret = obj.Target;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Target on a nil value");
		}
	}
}

